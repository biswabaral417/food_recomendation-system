{"version":3,"file":"static/js/539.b972b342.chunk.js","mappings":"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","sources":["components/adminPanel/OrderCard.jsx","components/adminPanel/AdminPanelServe.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport CombinedContext from '../../contexts/CombinedContext'\n\nexport default function OrderCard({ buttons, order }) {\n    const [totalCost, setTotalCost] = useState(0);\n    useEffect(() => {\n        // Calculate the total cost when order.items and item.food are available\n        if (order.items) {\n            const calculatedCost = order.items.reduce((acc, item) => {\n                if (item.food && item.food.itemPrice) {\n                    return acc + item.count * item.food.itemPrice;\n                }\n                return acc;\n            }, 0);\n            setTotalCost(calculatedCost);\n        }\n    }, [order.items]);\n\n    const { mode } = useContext(CombinedContext);\n    return (\n        <div className={`border d-flex  justify-content-between p-2 bg-${mode}`}>\n            <div className='d-flex'>\n                <div>\n                    <div className='d-flex flex-wrap mb-1'>\n                        <span className='border px-2' style={{ width: \"200px\" }}> <p>ordered by:</p><h5>{order.user.userName}</h5></span>\n                        <span className='border px-2' style={{ width: \"240px\" }}> <p>Email :</p><h6>{order.user.userEmail}</h6></span >\n                        <span className='border px-2' style={{ width: \"130px\" }}><p>phone :</p><h5>{order.user.userPhone}</h5></span>\n                        <div className='border px-2'>\n                            <span ><p>ordered at :</p><h6>{order.OrderedTime}</h6></span>\n                            <span ><p>Location :</p><h4>{order.user.userLocation} </h4></span>\n                        </div>\n                        <span className='border px-2' style={{ width: \"130px\" }}> <p>state :</p> <h4>{order.state}</h4></span>\n\n\n                    </div>\n                    <table>\n                        <thead>\n                            <tr>\n                                <td className='border p-1'> <p>S/N </p></td>\n                                <td className='border p-1'> <p>Items</p></td >\n                                <td className='border p-1'><p>Rate</p></td>\n                                <td className='border p-1'><p>Count</p></td>\n                                <td className='border p-1'><p>total</p></td>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            {order.items.map((item, i) => {\n                                if (item.food !== null) {\n\n                                    return (\n                                        <tr key={item.food._id}>\n                                            <td className='border px-1'>{i + 1}</td>\n                                            <td className='border px-1'>{item.food.itemName}</td>\n                                            <td className='border px-1'>{item.food.itemPrice} RS</td>\n                                            <td className='border px-1'>{item.count}</td>\n                                            <td className='border px-1'>{item.count * item.food.itemPrice} RS</td>\n                                        </tr>\n\n                                    )\n                                }\n                                else {\n                                    return (\n                                        <tr key={i}>\n                                            <td>\n                                                loading...\n                                            </td>\n                                        </tr>\n                                    )\n                                }\n                            }\n                            )}\n\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            <div className='my-auto'>\n                <h4>Total Cost : {totalCost} RS</h4>\n                {\n                    order.state === \"ordered\" ? (\n                        buttons.map((element, index) => (\n                            <button key={index} className='btn btn-primary my-1' onClick={() => element.func(order)}>{element.btntxt}</button>\n                        ))\n\n                    ) : (\n                        \"\"\n                    )\n                }\n            </div>\n\n\n        </div>\n\n\n    )\n}\n","import React, { useContext, useState } from 'react'\nimport { useEffect } from 'react';\nimport OrderCard from './OrderCard';\nimport CombinedContext from '../../contexts/CombinedContext';\n\n\nexport default function AdminPanelServe() {\n  const [pendingOrders, setPendingOrder] = useState([])\n  const { searchStr } = useContext(CombinedContext)\n  useEffect(() => {\n    const getorders = async () => {\n      try {\n        const res = await fetch('/api/admins/getOrders', {\n          method: \"GET\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          credentials: \"include\"\n        });\n\n        const data = await res.json();\n        if (!(res.status === 200)) {\n          const error = new Error(res.error)\n          throw error;\n        } else {\n          if (data) {\n            setPendingOrder(data)\n\n          }\n        }\n\n      } catch (error) {\n        console.log(error)\n      }\n    }\n\n    getorders();\n  }, []);\n\n\n\n  //search\n\n  const [filteredOrders, setFilteredOrders] = useState(pendingOrders)\n  useEffect(() => {\n    const searchFilter = (searchStr) => {\n      const lowerCasedSearch = searchStr.toLowerCase();\n      const filtered = pendingOrders.filter(order =>\n        deepSearch(order, lowerCasedSearch)\n      );\n      setFilteredOrders(filtered);\n    };\n\n    const deepSearch = (object, searchTerm) => {\n      for (const value of Object.values(object)) {\n        if (typeof value === 'string' && value.toLowerCase().includes(searchTerm)) {\n          return true;\n        } else if (Array.isArray(value)) {\n          for (const item of value) {\n            if (deepSearch(item, searchTerm)) {\n              return true;\n            }\n          }\n        } else if (typeof value === 'object' && value !== null) {\n          if (deepSearch(value, searchTerm)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    };\n\n    if (pendingOrders.length > 0) {\n      searchFilter(searchStr);\n    }\n  }, [searchStr, pendingOrders]);\n\n\n\n\n\n\n\n  const approve = async (item) => {\n    try {\n      const res = await fetch('/api/admins/ApproveOrders', {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body:JSON.stringify(item)\n      });\n\n      if (res) {\n        console.log(item)\n      }\n\n    } catch (error) {\n      console.log(error)\n    }\n\n  }\n  const decline = (item) => {\n\n  }\n\n  return (\n    <>\n      <div className='asd'>\n        {filteredOrders.map((order, index) => (\n          <OrderCard key={index} order={order} buttons={[{ func: approve, btntxt: \"approve order\" }, { func: decline, btntxt: \"decline order\" }]} />\n        ))}\n      </div>\n    </>\n  )\n}\n"],"names":["OrderCard","_ref","buttons","order","_useState","useState","_useState2","_slicedToArray","totalCost","setTotalCost","useEffect","items","calculatedCost","reduce","acc","item","food","itemPrice","count","mode","useContext","CombinedContext","_jsxs","className","concat","children","_jsx","style","width","user","userName","userEmail","userPhone","OrderedTime","userLocation","state","map","i","itemName","_id","element","index","onClick","func","btntxt","AdminPanelServe","pendingOrders","setPendingOrder","searchStr","getorders","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","data","wrap","_context","prev","next","fetch","method","headers","Accept","credentials","sent","json","status","Error","error","t0","console","log","stop","apply","arguments","_useState3","_useState4","filteredOrders","setFilteredOrders","deepSearch","object","searchTerm","_i","_Object$values","Object","values","length","value","toLowerCase","includes","Array","isArray","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","lowerCasedSearch","filtered","filter","searchFilter","approve","_ref2","_callee2","_context2","body","JSON","stringify","_x","decline","_Fragment"],"sourceRoot":""}