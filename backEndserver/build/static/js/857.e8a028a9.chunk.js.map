{"version":3,"file":"static/js/857.e8a028a9.chunk.js","mappings":"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","sources":["components/adminPanel/AdminRegister.jsx"],"sourcesContent":["import React, { useContext } from 'react'\nimport { useState } from 'react';\nimport CombinedContext from '../../contexts/CombinedContext';\nimport { useNavigate} from 'react-router-dom';\n\n\nexport default function AdminRegister() {\n    const navigate=useNavigate();\n    const { openLoginModal } = useContext(CombinedContext)\n    const [rUserData, setRUserData] = useState({ userName: \"\", userPhone: \"\", userEmail: \"\", userPassword: \"\", userConfirmPassword: \"\", userLocation: \"\" });\n\n    let feildId;\n    let value;\n    const removeWarning = () => {\n        document.getElementById(\"cbwarning\").textContent = \"\"\n    }\n    const handleInputs = (e) => {\n        feildId = e.target.id;\n        value = e.target.value;\n        setRUserData({ ...rUserData, [feildId]: value })\n        console.log(rUserData);\n    }\n    const PostData_Register_admin = async (e) => {\n        e.preventDefault()\n        // console.log((document.getElementById('flexCheckChecked').checked))\n        if ((document.getElementById('flexCheckChecked')).checked) {\n            const { userName, userPhone, userEmail, userPassword, userConfirmPassword, userLocation } = rUserData;\n            console.log({ rUserData })\n            const res = await fetch(\"/api/admins/register\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({ userName, userPhone, userEmail, userPassword, userConfirmPassword, userLocation })\n            });\n\n            const data = await res.json();\n            console.log(res.json)\n            if (res.status === 422 || !data) {\n                window.alert(data.error);\n                console.log(data.error);\n            }\n            else if (res.status === 201) {\n                window.alert(data.success);\n                console.log(data.success);\n                navigate('/admin')\n                openLoginModal();\n            }\n            else if (res.status === 500) {\n                window.alert(data.failed);\n                console.log(data.failed);\n            }\n            else {\n                window.alert(\"connection error\")\n            }\n\n        }\n        else {\n            document.getElementById(\"cbwarning\").textContent = `\"check this box to continue\"`\n        }\n    }\n\n\n\n\n\n\n    const togPass = () => {\n        if (document.getElementById('userPassword').type === \"password\") {\n            document.getElementById('userPassword').setAttribute(\"type\", \"text\");\n            document.getElementById('userConfirmPassword').setAttribute(\"type\", \"text\");\n            document.querySelector('.togp-btn').querySelector(\"img\").setAttribute(\"src\", \"../images/eye-slash-fill.svg\")\n        }\n        else {\n            document.getElementById('userPassword').setAttribute(\"type\", \"password\");\n            document.querySelector('.togp-btn').querySelector(\"img\").setAttribute(\"src\", \"../images/eye-fill.svg\")\n            document.getElementById('userConfirmPassword').setAttribute(\"type\", \"password\");\n        }\n    }\n\n    const styletxt={\n        height:\"100dvh\",\n    }\n\n    return (\n\n        <div className='p-5 bg-light' style={styletxt}>\n            <h1 className='text-center text-black fs-3'>Apply for Admin</h1>\n\n            <div>\n                <form method='post'>\n                    <input value={rUserData.userName} onChange={handleInputs} type=\"text\" id='userName' className='form-control my-2' placeholder='Enter name' />\n                    <div className=\"mb-3 d-flex gap-1\">\n                        <input value={rUserData.userPhone} onChange={handleInputs} type=\"text\" className=\"form-control\" id=\"userPhone\" aria-describedby=\"phoneHelp\" placeholder='Phone No' />\n                        <input value={rUserData.userLocation} onChange={handleInputs} type=\"text\" className=\"form-control\" id=\"userLocation\" aria-describedby=\"phoneHelp\" placeholder='Address' />\n                    </div>\n\n                    <input value={rUserData.userEmail} onChange={handleInputs} type=\"email\" className=\"form-control  my-2\" id=\"userEmail\" aria-describedby=\"emailHelp\" placeholder='Enter Email &nbsp;&nbsp;&nbsp; eg-example123@gmail.com' />\n                    <div className=\"mb-3\">\n                        <input value={rUserData.userPassword} onChange={handleInputs} type=\"password\" className=\"form-control  \" id=\"userPassword\" placeholder='Create Strong Password ' />\n\n                        <div className='d-flex'>\n                            <input value={rUserData.userConfirmPassword} onChange={handleInputs} type=\"password\" className=\"form-control my-2\" id=\"userConfirmPassword\" placeholder='Retype Password' />\n                            <button className='m-2 togp-btn d-flex align-items-center' onClick={() => togPass()} type='button'>&nbsp;<img src=\"../images/eye-slash-fill.svg\" alt=\"\" /></button>\n                        </div>\n                    </div>\n                    <div className=\"form-check\">\n                        <label className=\"form-check-label text-black\" id=\"chk\" htmlFor=\"flexCheckChecked\">\n                            <input className=\"form-check-input d-flex\" type=\"checkbox\" onChange={removeWarning} id=\"flexCheckChecked\" required />\n                            Agree Terms and Conditions<i id=\"cbwarning\" className='mx-3 text-danger text-italic'></i>\n                        </label>\n                    </div>\n                    <button className=\"btn btn-primary\" onClick={PostData_Register_admin} >Apply Application</button>\n                </form>\n            </div>\n\n        </div>\n    )\n}\n"],"names":["AdminRegister","feildId","value","navigate","useNavigate","openLoginModal","useContext","CombinedContext","_useState","useState","userName","userPhone","userEmail","userPassword","userConfirmPassword","userLocation","_useState2","_slicedToArray","rUserData","setRUserData","handleInputs","e","target","id","_objectSpread","_defineProperty","console","log","PostData_Register_admin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","data","wrap","_context","prev","next","preventDefault","document","getElementById","checked","fetch","method","headers","body","JSON","stringify","sent","json","status","window","alert","success","failed","error","textContent","stop","_x","apply","arguments","_jsxs","className","style","height","children","_jsx","onChange","type","placeholder","onClick","setAttribute","querySelector","src","alt","htmlFor","required"],"sourceRoot":""}